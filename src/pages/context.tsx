// import clientPromise from '@/utils/mongodb';
import Head from "next/head";
import { useRouter } from "next/router";
import React from "react";
import dbConnect from "../utils/dbConnect";

import dbConnection from "../../lib/dbConnection";
import { LyricModel } from "@/models/Schemas";
import styles from "@/styles/context.module.css";

export async function getServerSideProps(context) {
  try {
    await dbConnection();
    const data = await LyricModel.find({});
    console.log("data server", data);
    return {
      props: { data: JSON.parse(JSON.stringify(data)) },
    };
  } catch (error) {
    console.error("Error fetching data:", error);
    return { props: { data: [] } };
  }
}

export default function Context({ data }) {
  console.log("data client", data);
  const router = useRouter();
  const handlerSelect = (id) => {
    const songId = id.toString();
    router.push(`/${songId}`);
  };
  console.log("data :>> ", data);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ul className={styles.songList}>
        {data &&
          data.map((song, index) => (
            <li
              key={song._id}
              className={styles.songItem}
              onClick={() => handlerSelect(song._id)}
            >
              <span className={styles.songTitle}>{song.lyric}</span> by{" "}
              <span className={styles.authorName}>{song.author}</span>
            </li>
          ))}
      </ul>
    </>
  );
}
